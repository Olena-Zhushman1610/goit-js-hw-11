import { getImagesByQuery } from './js/pixabay-api.js';

import {
  renderGallery,
  clearGallery,
  showLoader,
  hideLoader,
} from './js/render-functions.js';
// –û–ø–∏—Å–∞–Ω–∏–π —É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
import iziToast from 'izitoast';
// –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤
import 'izitoast/dist/css/iziToast.min.css';

const searchForm = document.querySelector('.form');
const galleryContainer = document.querySelector('.gallery');

searchForm.addEventListener('submit', async event => {
  event.preventDefault();
  console.log(event.target.elements.search.value);

  const query = event.target.elements.search.value.trim();
  if (!query) return;

  try {
    showLoader(); // –ø–æ–∫–∞–∑—É—î–º–æ –ª–æ–∞–¥–µ—Ä
    clearGallery(); // –æ—á–∏—â–∞—î–º–æ –≥–∞–ª–µ—Ä–µ—é –ø–µ—Ä–µ–¥ –Ω–æ–≤–∏–º –ø–æ—à—É–∫–æ–º

    const data = await getImagesByQuery(query);
    // –û—á–∏—â—É—î–º–æ –≥–∞–ª–µ—Ä–µ—é –ø–µ—Ä–µ–¥ –Ω–æ–≤–∏–º –ø–æ—à—É–∫–æ–º
    //galleryContainer.innerHTML = '';

    if (data.hits.length === 0) {
      iziToast.show({
        title: '‚ùå',
        color: 'red',
        message:
          'Sorry, there are no images matching your search query. Please try again!',
        position: 'topRight',
      });
      return;
    }
    renderGallery(data.hits);
    //searchForm.reset(); //–æ—á–∏—â–∞—î–º–æ —Ñ–æ—Ä–º—É –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
  } catch (error) {
    iziToast.error({
      title: 'Error',
      message: 'Something went wrong while fetching images üò¢',
      position: 'topRight',
    });
  } finally {
    hideLoader(); // —Ö–æ–≤–∞—î–º–æ –ª–æ–∞–¥–µ—Ä –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    searchForm.reset(); //–æ—á–∏—â–∞—î–º–æ —Ñ–æ—Ä–º—É –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
  }
});
